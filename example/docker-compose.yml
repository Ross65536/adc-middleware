version: '3'

services:
  repository-db:
    image: ireceptor/repository-mongodb:master
    volumes:
        - ./data/mongodb:/data/db:delegated
    environment:
        MONGO_INITDB_DATABASE: ireceptor
    restart: on-failure

  repository:
    image: ireceptor/service-php-mongodb:master
    environment:
        DB_HOST: repository-db
        DB_DATABASE: ireceptor
        DB_SAMPLES_COLLECTION: sample
        DB_SEQUENCES_COLLECTION: sequence
        IRECEPTOR_AIRR_MAPPING_FILE: files/AIRR-iReceptorMapping.txt
    volumes:
        - ./config/turnkey:/var/www/html/config/files:delegated
    depends_on:
      - repository-db
    restart: on-failure

  middleware:
    image: ros65536/adc-middleware
    volumes:
      - ./config/middleware:/middleware/config
    environment:
      - UMA_CLIENT_SECRET=$MIDDLEWARE_UMA_CLIENT_SECRET
      - DB_PASSWORD=password
      - PROPERTIES_PATH=/middleware/config/example.properties
    depends_on:
      - keycloak
      - middleware-db
      - middleware-redis
    restart: on-failure

  middleware-frontend:
    image: ros65536/adc-middleware-frontend
    restart: on-failure

  keycloak:
    image: jboss/keycloak:10.0.2
    environment:
      DB_VENDOR: postgres
      DB_ADDR: keycloak_db
      DB_DATABASE: keycloak_db
      DB_USER: postgres
      DB_PASSWORD: password2
      # IMPORTANT: change username and password for deployment
      # might need to comment these out when restarting keycloak
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      DB_SCHEMA: public
      PROXY_ADDRESS_FORWARDING: 'true'
      # KEYCLOAK_LOGLEVEL: ALL
    depends_on:
      - keycloak_db
    restart: on-failure

  keycloak_db:
    image: postgres:12
    volumes:
      - ./data/db_keycloak:/var/lib/postgresql/data
    environment:
      # default user is 'postgres'
      POSTGRES_DB: keycloak_db
      POSTGRES_PASSWORD: password2
    restart: on-failure

  middleware-redis:
    image: redis
    restart: on-failure

  middleware-db:
    image: postgres:12
    volumes:
      - ./data/middleware_db:/var/lib/postgresql/data
    environment:
      # default user and DB is postgres
      POSTGRES_PASSWORD: password
    restart: on-failure

  server:
    image: nginx
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
    depends_on:
      - middleware
      - repository
      - middleware-frontend
    restart: on-failure

  # up this container and then run 
  # $ docker-compose exec http-logger /bin/sh
  # $ mitmproxy --mode reverse:http://keycloak:8080 -p 8081 --setheaders :~q:Host:http-logger:8081
  # http-logger:
  #   image: mitmproxy/mitmproxy
  #   stdin_open: true # docker run -i
  #   tty: true        # docker run -t
  #   entrypoint: /bin/sh
  #   ports:
  #     - 8081:8081